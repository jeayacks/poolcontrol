@page
@using Microsoft.AspNetCore.Mvc.Localization
@model IndexModel
@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = @Localizer["Home"];
}

<div class="card-deck">
    <div class="card border-primary mb-2">
        <div class="card-header text-white bg-primary">@Localizer["SwimmingPool"]</div>
        <div class="card-body text-primary">
            <table class="table table-sm">
                <tbody>
                    <tr>
                        <td>@Localizer["Mode"]</td>
                        <td>
                            @if (Model.GeneralState.SummerMode)
                            {
                                <i>@Localizer["Summer"] </i>
                                <i class="fas fa-sun text-warning"></i>
                            }
                            else
                            {
                                <i>@Localizer["Winter"] </i>
                                <i class="far fa-snowflake"></i>
                            }
                        </td>
                    </tr>
                    <tr>
                        <td>@Localizer["Filtration"]</td>
                        <td>
                            <i class="@(Model.GeneralState.Pump ? "fas fa-power-off text-success":"")"></i>
                            <i>@(Model.GeneralState.Pump ? Localizer["On"] : @Localizer["Off"])</i>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2">@Model.GeneralState.Status</td>
                    </tr>
                    <tr>
                        <td>@Localizer["Bassin"]</td>
                        <td>@Model.GeneralState.PoolTemperature °C</td>
                    </tr>
                    <tr>
                        <td>@Localizer["FiltrationDuration"]</td>
                        <td>@Model.GeneralState.PumpingDurationPerDayInHours h</td>
                    </tr>
                    <tr>
                        <td>@Localizer["PumpForcing"]</td>
                        <td>
                            @if (Model.GeneralState.PumpForceOff)
                            {
                                <i class="fas fa-power-off text-danger"></i>
                                <i> @Localizer["Off"]</i>
                            }
                            @if (Model.GeneralState.PumpForceOn)
                            {
                                <i class="fas fa-power-off text-danger"></i>
                                <i> @Localizer["On"]</i>
                            }
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <div class="card border-primary mb-2">
        <div class="card-header text-white bg-primary">@Localizer["NextProgramming"]</div>
        <div class="card-body text-primary">
            <table class="table table-sm">
                <thead>
                    <tr>
                        <th scope="col">@Localizer["Start"]</th>
                        <th scope="col">@Localizer["End"]</th>
                        <th scope="col">CL</th>
                        <th scope="col">PH</th>
                    </tr>
                </thead>
                @foreach (var item in this.Model.State.PumpCycles)
                {
                    <tbody>
                        <tr>
                            <td>@item.StartTime.ToString("ddd HH:mm")</td>
                            <td>@item.EndTime.ToString("ddd HH:mm")</td>
                            <td><i class="@(item.ChlorineInhibition ? "far fa-times-circle text-danger":"")"></i></td>
                            <td><i class="@(item.PhRegulationInhibition ? "far fa-times-circle text-danger":"")"></i></td>
                        </tr>
                    </tbody>
                }
            </table>
        </div>
    </div>

    <div class="card border-primary mb-2">
        <div class="card-header text-white bg-primary">@Localizer["Garden"]</div>
        <div class="card-body text-primary">
            <table class="table table-sm">
                <tbody>
                    <tr>
                        <td>@Localizer["Watering"]</td>
                        <td>
                            <i class="@(Model.GeneralState.Watering ? "fas fa-power-off text-success":"")"></i>
                            <i> @(Model.GeneralState.Watering ? Localizer["On"] : @Localizer["Off"])</i>
                        </td>
                    </tr>
                    <tr>
                        <td>@Localizer["PoolLight"]</td>
                        <td>
                            <i class="@(Model.GeneralState.SwimmingPoolLigth ? "fas fa-lightbulb text-success":"far fa-lightbulb text-muted")"></i>
                        </td>
                    </tr>
                    <tr>
                        <td>@Localizer["DeckLight"]</td>
                        <td>
                            <i class="@(Model.GeneralState.DeckLight ? "fas fa-lightbulb text-success":"far fa-lightbulb text-muted")"></i>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2">
                            @this.Model.GeneralState.WateringStatus
                        </td>
                    </tr>

                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="card border-primary mb-2">
    <div class="card-header text-white bg-primary">@Localizer["PumpingDuration"]</div>
    <div class="card-body text-primary">
        @Html.Raw(Model.ChartRenderer.RenderHtml())
    </div>
</div>

<div class="card-deck">

    @foreach (var group in Model.PumpingCycles)
    {

        <div class="card border-primary mb-2">
            <div class="card-header text-white bg-primary">&gt; @group.MinimumTemperature °C</div>
            <div class="card-body">
                @foreach (var item in group.PumpingCycles)
                {
                    <div>@(item.IsStartType ? Localizer["StartAt"] : Localizer["StopAt"]) @item.DecisionTime</div>
                }
            </div>
        </div>

    }
</div>